@page
@model WebApp.Pages.Deficit.IndexModel

<h1>Deficit stock items</h1>

<p>
    <a asp-page="Create">Add new item</a> |
    <a asp-page="Index" asp-route-refillAll="true">Refill all items</a> (Total cost to refill @Model.GetTotal() (€))
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].CurrentQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].OptimalQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].Price) (€)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Item[0].Category)
        </th>
        <th>Cost to refill</th>
        <th></th>
    </tr>
    </thead>
    <tbody>

    @foreach (var item in Model.Item)
    {
        <tr class="@Model.GetClass(item)">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OptimalQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category!.Name)
            </td>
            <td>
                @(item.Price * (item.OptimalQuantity - item.CurrentQuantity))
            </td>
            <td>
                <a asp-page="./Index" asp-route-id="@item.ItemId">Refill</a>
            </td>
        </tr>
    }
    </tbody>
</table>